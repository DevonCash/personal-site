---
import type { Props as _Props } from "@astrojs/starlight/props";
import MarkdownContent from "@astrojs/starlight/components/MarkdownContent.astro";
import CommentSection from "./CommentSection.astro";

interface Props extends _Props {
  hideComments?: boolean;
}

const slug = Astro.url.pathname
  .replace(/\//g, "-")
  .replace(/^-/, "")
  .replace(/-$/, "");
---

<script is:inline>
  // Get all the heading elements
  const headings = document.querySelectorAll("h1[id], h2[id], h3[id], h4[id], h5[id], h6[id]");

  // Create an IntersectionObserver
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        // When a heading enters the viewport
        if (entry.isIntersecting) {
          // Find all links that point to this heading's ID
          const id = entry.target.id;
          const links = document.querySelectorAll(`a[href="#${id}"]`);

          // Remove active class from all links
          document.querySelectorAll('a[href^="#"]').forEach((link) => {
            link.classList.remove("active");
          });

          // Add active class to links pointing to current heading
          links.forEach((link) => {
            link.classList.add("active");
          });
        }
      });
    },
    {
      // Start triggering when element is 30% visible
      threshold: 0.3,
      // Add some margin to when we consider the element "visible"
      rootMargin: "-20% 0px -35% 0px",
    }
  );

  // Observe all headings
  headings.forEach((heading) => observer.observe(heading));

  // Optional: Handle initial state on page load
  const hash = window.location.hash;
  if (hash) {
    const links = document.querySelectorAll(`a[href="${hash}"]`);
    links.forEach((link) => link.classList.add("active"));
  }
</script>
{
  !Astro.props.hideComments ? (
    <CommentSection sectionId={slug}>
      <MarkdownContent {...Astro.props}>
        <slot />
      </MarkdownContent>
    </CommentSection>
  ) : (
    <MarkdownContent {...Astro.props}>
      <slot />
    </MarkdownContent>
  )
}

<style>
  a[href^="#"].active {
    color: var(--sl-color-text-accent);
    background: var(--sl-color-blue-low);
    font-weight: bold;
  }
</style>
